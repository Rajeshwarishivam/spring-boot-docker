# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: spring-boot-docker

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '06ae1a7a-7b8e-4cd2-bff6-c896a92316fb'
  imageRepository: 'rajeshwarishivamspringbootdocker'
  containerRegistry: 'container1test.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'container1test202957c9-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'test'
        repository: 'api'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'Rajeshwarishivamspringbootdocker-1790.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'connectiontokub'
              secretType: 'dockerRegistry'
              secretName: 'my-pull-secret'
              dockerRegistryEndpoint: 'test'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'connectiontokub'
              strategy: 'canary'
              percentage: '25'
              manifests: |
                     $(spring-boot-docker)/manifests/deployment.yml
                     $(spring-boot-docker)/manifests/service.yml
              containers: 'Container1test/api:$(tag)'

